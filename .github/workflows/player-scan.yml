name: Scan Bedrock Players (external)

on:
  schedule:
    - cron: "*/5 * * * *"
  workflow_dispatch: {}

permissions:
  contents: write

concurrency:
  group: bedrock-player-scan
  cancel-in-progress: true

env:
  BEDROCK_HOST: "important-instrumentation.gl.at.ply.gg"
  BEDROCK_PORT: "18232"
  OUT_LIVE: "data/players.json"
  OUT_HISTORY: "data/player-count-history.json"
  KEEP_SAMPLES: "2016"

jobs:
  scan:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
      - name: Random jitter
        run: sleep $(( RANDOM % 46 ))

      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: main
          persist-credentials: true

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Query Bedrock via API
        shell: bash
        run: |
          set -euo pipefail
          HOST="${BEDROCK_HOST}"
          PORT="${BEDROCK_PORT}"
          date_iso="$(date -u +%FT%TZ)"

          echo "Querying ${HOST}:${PORT}..."

          if curl -fsSL --max-time 8 "https://api.mcsrvstat.us/bedrock/3/${HOST}:${PORT}" -o api_raw.json 2>/dev/null; then
            echo "API query successful"
            
            jq --arg ts "$date_iso" \
               --arg host "$HOST" \
               --argjson port ${PORT:-0} '
                {
                  generated: $ts,
                  service: { name: "Minecraft Bedrock", host: $host, port: $port },
                  online: (.online // false),
                  motd: (if .motd.clean then (.motd.clean | join(" ")) else "" end),
                  playerCount: (if .players.online then .players.online else 0 end),
                  max: (.players.max // 0),
                  players: (if .players.list then .players.list else [] end)
                }
               ' api_raw.json > players_norm.json
          
          elif npx -y gamedig@4 --type minecraftbedrock --host "$HOST" --port "$PORT" > gamedig_raw.json 2>/dev/null; then
            echo "gamedig query successful"
            
            jq --arg ts "$date_iso" \
               --arg host "$HOST" \
               --argjson port ${PORT:-0} '
                {
                  generated: $ts,
                  service: { name: "Minecraft Bedrock", host: $host, port: $port },
                  online: (if .players then (.players | length > 0) else false end),
                  motd: (.name // ""),
                  playerCount: (if .players then (.players | length) else 0 end),
                  max: (.maxplayers // 0),
                  players: (if .players then [.players[].name] else [] end)
                }
               ' gamedig_raw.json > players_norm.json
          
          else
            echo "Both methods failed - offline"
            jq -n --arg ts "$date_iso" \
                  --arg host "$HOST" \
                  --argjson port ${PORT:-0} \
                  '{generated:$ts,service:{name:"Minecraft Bedrock",host:$host,port:$port},online:false,motd:"",playerCount:0,max:0,players:[]}' \
                  > players_norm.json
          fi

          echo "Result:"
          cat players_norm.json

          mkdir -p "$(dirname "$OUT_LIVE")" "$(dirname "$OUT_HISTORY")"

          if [ -s "$OUT_LIVE" ] && diff -q "$OUT_LIVE" players_norm.json >/dev/null 2>&1; then
            echo "No change"
          else
            cp players_norm.json "$OUT_LIVE"
            echo "Updated $OUT_LIVE"
          fi

          if ! [ -s "$OUT_HISTORY" ] || ! jq -e 'type=="array"' "$OUT_HISTORY" >/dev/null 2>&1; then
            echo "[]" > "$OUT_HISTORY"
          fi

          jq --arg ts "$date_iso" \
             --argjson c "$(jq -r '.playerCount' players_norm.json)" \
             --argjson keep ${KEEP_SAMPLES:-2016} \
             '. + [{ts:$ts,online:$c}] | .[-($keep|tonumber):]' \
             "$OUT_HISTORY" > "$OUT_HISTORY.tmp" && mv "$OUT_HISTORY.tmp" "$OUT_HISTORY"

      - name: Commit and push
        shell: bash
        run: |
          set -euo pipefail
          if git diff --quiet -- data/players.json data/player-count-history.json; then
            echo "No changes"
          else
            git config user.name "${{ github.actor }}"
            git config user.email "${{ github.actor }}@users.noreply.github.com"
            git add data/players.json data/player-count-history.json
            git commit -m "players: $(date -u +%FT%TZ) [auto]"
            git push origin main
          fi